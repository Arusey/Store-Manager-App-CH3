import psycopg2
from flask import jsonify
import os
from instance.config import Config


class Db(object):
    def __init__(self):
        self.dbName = Config.DB_NAME
        self.dbHost = Config.DB_HOST
        self.dbUser = Config.DB_USER
        self.dbPassword = Config.DB_PASSWORD
        self.conn = None


    def create_connection(self):
        try:
            if Config.APP_SETTINGS == "testing":
                self.conn = psycopg2.connect(database='test_database')
            if Config.APP_SETTINGS == 'development':
                self.conn = psycopg2.connect(
                    database=self.dbName,
                    host=self.dbHost,
                    password=self.dbPassword
                )
            return self.conn
        except:
            return jsonify(
                {
                'error': 'connection failed'
                }
            )
    def create_tables(self):
        cursor = self.create_connection().cursor()
        tables = [
            """CREATE TABLE IF NOT EXISTS users(
            id int NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
            name varchar(80) NOT NULL,
            email varchar(80) NOT NULL,
            PASSWORD varchar(80) NOT NULL,
            role varchar(10) NOT NULL
            )""",
            """CREATE TABLE IF NOT EXISTS attendants(
            id int NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
            name varchar(80) NOT NULL,
            email varchar(80) NOT NULL,
            PASSWORD varchar(80) NOT NULL,
            role varchar(10) NOT NULL
            )""",

            """CREATE TABLE IF NOT EXISTS products(
            id int NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
            name varchar(15) NOT NULL,
            category varchar(20) NOT NULL,
            description varchar(80) NOT NULL,
            currentstock int NOT NULL,
            minimumstock int NOT NULL,
            price float(40) NOT NULL
            )""",

            """CREATE TABLE IF NOT EXISTS sales(
            id int NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
            userid int REFERENCES users(id) not null,
            productid int REFERENCES products(id) not null
            )"""

        ]
        try:
            for table in tables:
                cursor.execute(table)
        except Exception as e:
            print(e)
            return "error"

        self.conn.commit()
        self.conn.close()

    def collapse_tables(self):
        cursor = self.create_connection().cursor()
        mysql = [
        "DROP TABLE IF EXISTS users CASCADE",
        "DROP TABLE IF EXISTS products CASCADE",
        "DROP TABLE IF EXISTS sales CASCADE"
        ]
        for string in mysql:
            cursor.execute(string)
        self.conn.commit()
        self.conn.close()
